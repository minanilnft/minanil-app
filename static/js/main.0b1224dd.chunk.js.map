{"version":3,"sources":["web3.js","Minanil.js","containers/Layout.js","animated.gif","containers/HomeView.js","containers/AboutView.js","routes.js","App.js","reportWebVitals.js","index.js"],"names":["web3","window","ethereum","Web3","enable","on","location","reload","error","console","log","ethContract","eth","Contract","CustomLayout","state","web3Connected","initPageData","a","w3Available","minanil","request","method","networkId","getAccounts","accounts","length","setState","handleConnectWeb3Click","event","data","this","fixed","userLayout","userWeb3Comp","Label","as","Icon","name","onClick","Segment","inverted","textAlign","vertical","Menu","pointing","secondary","stackable","Container","Item","link","to","pathname","position","props","children","style","padding","Grid","divided","Row","Column","width","Header","content","List","target","href","React","Component","withRouter","WEI_COST","GAS_LIMIT","CONTRACT_ADDR","HomeView","curMsg","value","message","accountsAvailable","accountList","cRoundStartTime","userCanCallNext","loading","numMint","contractOwner","totalSupply","errorModalOpen","successModalOpen","polygonConected","accAvailable","usrNxt","owner","methods","call","numRemaining","parseInt","handleChangeNumMint","e","getOptions","number","prefix","_","times","index","key","text","handleClickMint","mintOnChain","mintAmount","totalCostWei","String","totalGasLimit","mint","send","gasLimit","from","once","err","then","receipt","setOpenErrorModal","isOpen","setOpenSuccessModal","document","title","mintButton","Form","Dropdown","scrolling","defaultValue","options","marginRight","onChange","Button","labelPosition","primary","size","basic","disabled","height","className","fontSize","fontWeight","marginBottom","marginTop","color","Message","compact","id","class","src","ani","alt","Modal","onClose","onOpen","open","centered","icon","Content","Actions","AboutView","Divider","floating","rel","frameborder","allow","allowfullscreen","BaseRouter","exact","path","component","App","basename","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0b1224dd.chunk.js","sourcesContent":["import Web3 from 'web3';\r\n// const INFURA_KEY = process.env.REACT_APP_INFURA_LINK;\r\nlet web3;\r\n\r\n// first check if we are on browser and userhas metamask\r\nif (typeof window !== 'undefined' && typeof window.ethereum !== 'undefined') {\r\n  // we are in browser\r\n  // and user has metamask\r\n  web3 = new Web3(window.ethereum);\r\n\r\n  try {\r\n    // Request account access if needed\r\n    window.ethereum.enable()\r\n\r\n    // Acccounts now exposed\r\n    window.ethereum.on(\"chainChanged\", () => {\r\n      window.location.reload();\r\n      // console.log(\"Chain changed\");\r\n    });\r\n  } catch (error) {\r\n    // User denied account access...\r\n    console.log(\"Unable to enable web3\");\r\n  }\r\n\r\n}\r\nelse {\r\n  console.log(\"Please use metamask to enable web3\");\r\n  // todo: add custom provider for non-metamask users\r\n  // try create provider\r\n  // const provider = new Web3.providers.HttpProvider(INFURA_KEY);\r\n  web3 = null;\r\n  // web3 = new Web3(provider);\r\n}\r\n\r\n\r\nexport default web3;","import web3 from './web3';\r\n// const fs = require('fs-extra');\r\n// import fs from 'fs-extra';\r\nlet ethContract;\r\n\r\nif (web3 !== null) {\r\n    // console.log(web3.version);\r\n    // console.log(\"Got3\");\r\n    const address = '0x28e354b665f06C602d34420F166E0AFba877F1Cc';\r\n    const contractObj = [\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Approval\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": false,\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"ApprovalForAll\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"previousOwner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"OwnershipTransferred\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"anonymous\": false,\r\n            \"inputs\": [\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"indexed\": true,\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"Transfer\",\r\n            \"type\": \"event\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"approve\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_mintAmount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"mint\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"_state\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"pause\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"renounceOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"reveal\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bytes\",\r\n                    \"name\": \"_data\",\r\n                    \"type\": \"bytes\"\r\n                }\r\n            ],\r\n            \"name\": \"safeTransferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"approved\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"name\": \"setApprovalForAll\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_newBaseExtension\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setBaseExtension\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_newBaseURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setBaseURI\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_newCost\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"setCost\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"_newmaxMintAmount\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"setmaxMintAmount\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_notRevealedURI\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"name\": \"setNotRevealedURI\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"from\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"to\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"transferFrom\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"newOwner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"transferOwnership\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"withdraw\",\r\n            \"outputs\": [],\r\n            \"stateMutability\": \"payable\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_name\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_symbol\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_initBaseURI\",\r\n                    \"type\": \"string\"\r\n                },\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"_initNotRevealedUri\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"nonpayable\",\r\n            \"type\": \"constructor\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"balanceOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"baseExtension\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"cost\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"getApproved\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"operator\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"isApprovedForAll\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"maxMintAmount\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"maxSupply\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"name\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"notRevealedUri\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"owner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"ownerOf\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"paused\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"revealed\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"bytes4\",\r\n                    \"name\": \"interfaceId\",\r\n                    \"type\": \"bytes4\"\r\n                }\r\n            ],\r\n            \"name\": \"supportsInterface\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"bool\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"bool\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"symbol\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenByIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"owner\",\r\n                    \"type\": \"address\"\r\n                },\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"index\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenOfOwnerByIndex\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"tokenId\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"name\": \"tokenURI\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"string\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"string\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [],\r\n            \"name\": \"totalSupply\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        },\r\n        {\r\n            \"inputs\": [\r\n                {\r\n                    \"internalType\": \"address\",\r\n                    \"name\": \"_owner\",\r\n                    \"type\": \"address\"\r\n                }\r\n            ],\r\n            \"name\": \"walletOfOwner\",\r\n            \"outputs\": [\r\n                {\r\n                    \"internalType\": \"uint256[]\",\r\n                    \"name\": \"\",\r\n                    \"type\": \"uint256[]\"\r\n                }\r\n            ],\r\n            \"stateMutability\": \"view\",\r\n            \"type\": \"function\"\r\n        }\r\n    ];\r\n\r\n    ethContract = new web3.eth.Contract(contractObj, address);\r\n}\r\nelse {\r\n    // console.log(\"No 3\");\r\n    ethContract = null\r\n}\r\n\r\n\r\n\r\n\r\nexport default ethContract;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport web3 from '../web3';\r\nimport minanil from '../Minanil';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Icon,\r\n  Menu,\r\n  Segment,\r\n  Label,\r\n  Grid,\r\n  List,\r\n  Header\r\n\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass CustomLayout extends React.Component {\r\n\r\n  state = {\r\n    web3Connected: false,\r\n    // polygonNetwork:false\r\n  };\r\n\r\n\r\n  componentDidMount() {\r\n    // const { pathname } = this.props.location;\r\n    // console.log(pathname);\r\n    // this.setCurrentMenuItemActive();\r\n\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts;\r\n    let w3Available = false;\r\n\r\n    if (web3 !== null && minanil !== null) {\r\n      // console.log(web3.version);\r\n      // get network\r\n      const networkId = await window.ethereum.request({\r\n        method: \"net_version\",\r\n      });\r\n      console.log(\"Connected to network\", networkId, typeof (networkId));\r\n      if (networkId === \"137\") {\r\n        console.log(\"Connected to network inside\", networkId);\r\n\r\n        // make sure connected to polygon\r\n        accounts = await web3.eth.getAccounts();\r\n        // console.log(accounts);\r\n        if (accounts.length > 0) {\r\n          w3Available = true;\r\n        }\r\n        else {\r\n          w3Available = false;\r\n\r\n        }\r\n      }\r\n      // console.log(\"Got3\");\r\n\r\n    }\r\n    else {\r\n      w3Available = false;\r\n\r\n    }\r\n    this.setState({ web3Connected: w3Available });\r\n\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n\r\n  handleConnectWeb3Click = (event, data) => {\r\n    // console.log(\"web3 connect clicked\");\r\n    // console.log(event);\r\n    // console.log(data);\r\n    try {\r\n      // Request account access if needed\r\n      window.ethereum.enable();\r\n      // Acccounts now exposed\r\n\r\n      // this.setState({ web3Connected: true });\r\n      this.initPageData();\r\n    } catch (error) {\r\n      // User denied account access...\r\n      console.log(\"Unable to enable web3\");\r\n      this.setState({ web3Connected: false });\r\n\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n  render() {\r\n    // const { children } = this.props\r\n    const fixed = this.state.fixed;\r\n    let userLayout = null;\r\n\r\n    var authMenuItems = null;\r\n\r\n    let userWeb3Comp = null;\r\n\r\n    if (this.state.web3Connected === true) {\r\n      userWeb3Comp = (\r\n        <Label as='a'>\r\n          <Icon name='circle' /> connected\r\n        </Label>\r\n      );\r\n    }\r\n    else {\r\n      userWeb3Comp = (\r\n        <Label as='a' onClick={this.handleConnectWeb3Click}>\r\n          <Icon name='circle outline' /> connect\r\n        </Label>\r\n      );\r\n    }\r\n\r\n    userLayout = (\r\n      <div>\r\n        <Segment\r\n          inverted\r\n          textAlign='center'\r\n          vertical\r\n        >\r\n          <Menu\r\n            inverted\r\n            pointing\r\n            secondary\r\n            stackable\r\n          >\r\n            <Container>\r\n\r\n              <Menu.Item name=\"Home\" link >\r\n                <Link to={{ pathname: \"/\" }} >\r\n                  home\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n\r\n              <Menu.Item name=\"About\" link>\r\n                <Link to={{ pathname: \"/about\" }} >\r\n                  about\r\n                </Link>\r\n              </Menu.Item>\r\n\r\n              <Menu.Item position='right'>\r\n                {userWeb3Comp}\r\n\r\n              </Menu.Item>\r\n            </Container>\r\n          </Menu>\r\n        </Segment>\r\n        {this.props.children}\r\n        <Segment inverted vertical style={{ padding: '5em 0em' }}>\r\n          <Container>\r\n            <Grid divided inverted stackable>\r\n              <Grid.Row>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='Opensea' />\r\n                  <List link inverted>\r\n                    <List.Item as='a' target=\"_blank\" href=\"https://opensea.io/collection/minanil\">view collection</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n                <Grid.Column width={3}>\r\n                  <Header inverted as='h4' content='Polygon' />\r\n                  <List link inverted>\r\n                    <List.Item as='a' target=\"_blank\" href=\"https://polygonscan.com/address/0x28e354b665f06c602d34420f166e0afba877f1cc\">view contract</List.Item>\r\n                  </List>\r\n                </Grid.Column>\r\n              </Grid.Row>\r\n            </Grid>\r\n          </Container>\r\n        </Segment>\r\n      </div>\r\n\r\n\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(CustomLayout);\r\n\r\n","export default __webpack_public_path__ + \"static/media/animated.5e658b94.gif\";","import React, { Component } from 'react';\r\nimport '../App.css';\r\nimport web3 from '../web3';\r\nimport {\r\n  Button,\r\n  Container,\r\n  Header,\r\n  Icon,\r\n  Segment,\r\n  Dropdown,\r\n  Modal,\r\n  Form,\r\n  Message,\r\n  Loader,\r\n  Label,\r\n  Grid,\r\n  List\r\n} from 'semantic-ui-react';\r\nimport minanil from '../Minanil';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport ani from '../animated.gif';\r\nimport _ from 'lodash';\r\n\r\n\r\nconst WEI_COST = 3000000000000000000;\r\nconst GAS_LIMIT = 285000;\r\nconst CONTRACT_ADDR = \"0x28e354b665f06C602d34420F166E0AFba877F1Cc\";\r\n\r\nclass HomeView extends Component {\r\n\r\n\r\n  state = {\r\n    curMsg: \"\",\r\n    value: \"\",\r\n    message: \"\",\r\n    accountsAvailable: false,\r\n    accountList: [],\r\n    cRoundStartTime: null,\r\n    userCanCallNext: false,\r\n    loading: false,\r\n    numMint: 1,\r\n    contractOwner: \"\",\r\n    totalSupply: -1,\r\n    errorModalOpen: false,\r\n    successModalOpen: false,\r\n    polygonConected: false\r\n  };\r\n\r\n\r\n\r\n  componentDidMount() {\r\n    document.title = \"home\";\r\n    this.initPageData();\r\n\r\n  }\r\n\r\n  initPageData = async () => {\r\n\r\n    let accounts = [];\r\n    let accAvailable = false;\r\n    let usrNxt = false;\r\n    let owner = \"\";\r\n    let totalSupply = -1;\r\n    let polygonConected = false;\r\n    let numRemaining;\r\n\r\n\r\n    if (web3 !== null && minanil !== null) {\r\n      const networkId = await window.ethereum.request({\r\n        method: \"net_version\",\r\n      });\r\n      console.log(\"Connected to network\", networkId);\r\n      if (networkId === \"137\") {\r\n        // make sure on poly\r\n\r\n        accounts = await web3.eth.getAccounts();\r\n        console.log(accounts);\r\n        if (accounts.length > 0) {\r\n          accAvailable = true;\r\n          polygonConected = true;\r\n\r\n          try {\r\n            owner = await minanil.methods.owner().call();\r\n            totalSupply = await minanil.methods.totalSupply().call();\r\n\r\n            numRemaining = 1024 - parseInt(totalSupply);\r\n            console.log(\"Contract owner & supply\", owner, totalSupply, typeof (totalSupply), numRemaining);\r\n          } catch (error) {\r\n            console.log(\"Error, unable to get owner. Err:\", error);\r\n          }\r\n\r\n\r\n        }\r\n        else {\r\n          accAvailable = false;\r\n          usrNxt = false;\r\n          polygonConected = false;\r\n\r\n\r\n        }\r\n      }\r\n    }\r\n    else {\r\n      accAvailable = false;\r\n      usrNxt = false;\r\n      polygonConected = false;\r\n\r\n    }\r\n    this.setState({\r\n      accountsAvailable: accAvailable,\r\n      userCanCallNext: usrNxt,\r\n      accountList: accounts,\r\n      contractOwner: owner,\r\n      totalSupply: totalSupply,\r\n      polygonConected: polygonConected,\r\n      numRemaining: numRemaining\r\n    });\r\n\r\n  };\r\n\r\n\r\n\r\n  handleChangeNumMint = (e, { name, value }) => {\r\n    console.log(\"User changed num mint\", value, name);\r\n    // now try call next round async\r\n    // this.callNextRoundPickWinner();\r\n    this.setState({ numMint: value });\r\n\r\n  }\r\n\r\n\r\n\r\n  getOptions = (number, prefix = '') =>\r\n    _.times(number, (index) => ({\r\n      key: index + 1,\r\n      text: `${prefix}${index + 1}`,\r\n      value: index + 1,\r\n    }))\r\n\r\n  handleClickMint = () => {\r\n    const numMint = this.state.numMint;\r\n\r\n    console.log(\"Minting \", numMint, \"NFTs\");\r\n    this.mintOnChain(numMint);\r\n\r\n\r\n\r\n  }\r\n\r\n  mintOnChain = async (mintAmount) => {\r\n    // event.preventDefault();\r\n\r\n    let cost = WEI_COST;\r\n    let gasLimit = GAS_LIMIT;\r\n    let totalCostWei = String(cost * mintAmount);\r\n    let totalGasLimit = String(gasLimit * mintAmount);\r\n    console.log(\"Cost: \", totalCostWei);\r\n    console.log(\"Gas limit: \", totalGasLimit);\r\n\r\n    try {\r\n      const accounts = await web3.eth.getAccounts();\r\n\r\n      this.setState({ message: \"Pending\", loading: true });\r\n      console.log(accounts, accounts[0]);\r\n      console.log(\"Contract owner\", this.state.contractOwner);\r\n\r\n      if (accounts[0] === this.state.contractOwner) {\r\n        console.log(\"You are owner of contract, no charge\");\r\n\r\n        await minanil.methods\r\n          .mint(mintAmount)\r\n          .send({\r\n            gasLimit: String(totalGasLimit),\r\n            to: CONTRACT_ADDR,\r\n            value: String(\"0\"),\r\n            from: accounts[0]\r\n          })\r\n          .once(\"error\", (err) => {\r\n            console.log(err);\r\n            console.log(\"Sorry, something went wrong please try again later.\");\r\n            this.setState({ message: \"Error\", loading: false, errorModalOpen: true });\r\n\r\n          })\r\n          .then((receipt) => {\r\n            console.log(receipt);\r\n            console.log(\r\n              `WOW, the minanil is yours! go visit Opensea.io to view it.`\r\n            );\r\n            this.setState({ message: \"Done\", loading: false, successModalOpen: true });\r\n\r\n          });\r\n      }\r\n      else {\r\n        console.log(\"Not contract owner, charging\");\r\n        await minanil.methods\r\n          .mint(mintAmount)\r\n          .send({\r\n            gasLimit: String(totalGasLimit),\r\n            to: CONTRACT_ADDR,\r\n            value: totalCostWei,\r\n            from: accounts[0]\r\n          })\r\n          .once(\"error\", (err) => {\r\n            console.log(err);\r\n            console.log(\"Sorry, something went wrong please try again later.\");\r\n            this.setState({ message: \"Error\", loading: false, errorModalOpen: true });\r\n\r\n          })\r\n          .then((receipt) => {\r\n            console.log(receipt);\r\n            console.log(\r\n              `WOW, the minanil is yours! go visit Opensea.io to view it.`\r\n            );\r\n            this.setState({ message: \"Done\", loading: false, successModalOpen: true });\r\n\r\n\r\n          });\r\n      }\r\n\r\n\r\n\r\n\r\n\r\n    }\r\n    catch (error) {\r\n      console.log(\"Error submitting. Err:\", error);\r\n      this.setState({ message: \"Error\", loading: false });\r\n\r\n    }\r\n\r\n\r\n\r\n  };\r\n\r\n\r\n  setOpenErrorModal = (isOpen) => {\r\n    console.log(\"about to set error modal\", isOpen);\r\n    this.setState({ errorModalOpen: isOpen });\r\n\r\n  }\r\n\r\n  setOpenSuccessModal = (isOpen) => {\r\n    console.log(\"about to set success modal\", isOpen);\r\n    this.setState({ successModalOpen: isOpen });\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n    let mintButton = null;\r\n\r\n\r\n    if (this.state.accountsAvailable === true && this.state.polygonConected === true) {\r\n      mintButton = (\r\n        <div>\r\n          <Form loading={this.state.loading}>\r\n            <Dropdown\r\n\r\n              scrolling\r\n              defaultValue={1}\r\n              options={this.getOptions(20)}\r\n              style={{ marginRight: '15px' }}\r\n              onChange={this.handleChangeNumMint}\r\n            />\r\n            <Button as='div' labelPosition='right'>\r\n              <Button primary size='huge' onClick={this.handleClickMint}>\r\n                mint\r\n              </Button>\r\n              <Label as='a' basic pointing='left'>\r\n                (3 MATIC each)\r\n              </Label>\r\n            </Button>\r\n          </Form>\r\n\r\n        </div>\r\n      );\r\n    }\r\n    else {\r\n      mintButton = (\r\n        <div>\r\n          <Form disabled>\r\n            <Dropdown\r\n              disabled\r\n              scrolling\r\n              defaultValue={1}\r\n              options={this.getOptions(20)}\r\n              style={{ marginRight: '15px' }}\r\n              onChange={this.handleChangeNumMint}\r\n            />\r\n            <Button disabled as='div' labelPosition='right'>\r\n              <Button disabled primary size='huge' onClick={this.handleClickMint}>\r\n                mint\r\n              </Button>\r\n              <Label disabled as='a' basic pointing='left'>\r\n                (3 MATIC each)\r\n              </Label>\r\n            </Button>\r\n          </Form>\r\n          <p>(unable to connect to the Polygon network - Refresh the page OR try installing MetaMask to mint)</p>\r\n        </div>\r\n      );\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    userLayout = (\r\n      <Segment\r\n        textAlign='center'\r\n        style={{ padding: '1em 0em', height: '100vh' }}\r\n        vertical\r\n      >\r\n        <Container text>\r\n          <div className=\"text\">\r\n            <span>m</span>\r\n            <span>i</span>\r\n            <span>n</span>\r\n            <span>a</span>\r\n            <span>n</span>\r\n            <span>i</span>\r\n            <span>l</span>\r\n\r\n          </div>\r\n          <Header\r\n            as='h1'\r\n            content='1024 uniquely produced pieces of artwork.'\r\n            inverted\r\n            style={{\r\n              fontSize: '2em',\r\n              fontWeight: 'normal',\r\n              marginBottom: '1em',\r\n              marginTop: '1em',\r\n              color: '#000'\r\n            }}\r\n          />\r\n\r\n          <Container>\r\n            <div style={{ marginBottom: '1em' }}>\r\n              <Message compact >\r\n                <p>\r\n                  each piece is hosted on IPFS and linked to a ERC721 (NFT) token stored on the Polygon blockchain\r\n                </p>\r\n              </Message>\r\n            </div>\r\n          </Container>\r\n\r\n        </Container >\r\n        <Container>\r\n          <div>\r\n            <div style={{ marginBottom: '2em' }}>\r\n              {mintButton}\r\n            </div>\r\n            {this.state.curMsg}\r\n          </div>\r\n\r\n\r\n\r\n        </Container>\r\n        <Container>\r\n          <section id=\"container\">\r\n\r\n            <div class=\"thumbnail\"\r\n              data-title=\"minanil\">\r\n              <img src={ani} alt=\"minanilgif\" width=\"200\">\r\n              </img>\r\n            </div>\r\n            <p>{this.state.numRemaining} pieces available</p>\r\n          </section>\r\n\r\n        </Container>\r\n\r\n\r\n        <Modal\r\n          onClose={() => this.setOpenSuccessModal(false)}\r\n          onOpen={() => this.setOpenSuccessModal(true)}\r\n          open={this.state.successModalOpen}\r\n          size='small'\r\n          centered\r\n        >\r\n          <Header icon>\r\n            <Icon name='check' />\r\n            success\r\n          </Header>\r\n          <Modal.Content>\r\n            the minanil NFT is yours. visit Opensea.io to view it\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='green' onClick={() => this.setOpenSuccessModal(false)}>\r\n              ok\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n\r\n        <Modal\r\n          onClose={() => this.setOpenErrorModal(false)}\r\n          onOpen={() => this.setOpenErrorModal(true)}\r\n          open={this.state.errorModalOpen}\r\n          size='small'\r\n          centered\r\n        >\r\n          <Header icon>\r\n            <Icon name='times' />\r\n            error\r\n          </Header>\r\n          <Modal.Content>\r\n            there was an issue minting the NFT. please try again\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button color='red' onClick={() => this.setOpenErrorModal(false)}>\r\n              ok\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </Segment >\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(HomeView);\r\n\r\n","import React, { Component } from 'react';\r\n// import logo from './logo.svg';\r\n// import './App.css';\r\n// import { createMedia } from '@artsy/fresnel';\r\n// import PropTypes from 'prop-types';\r\n// import web3 from './web3';\r\nimport {\r\n  Container,\r\n  Divider,\r\n  List,\r\n  Segment,\r\n  Message,\r\n  Item\r\n} from 'semantic-ui-react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\n\r\nclass AboutView extends Component {\r\n\r\n  componentDidMount() {\r\n    document.title = \"about\";\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    let userLayout;\r\n    userLayout = (\r\n      <div>\r\n\r\n        <Segment textAlign='left'>\r\n\r\n          <Container text>\r\n            minanil is a collection of 1024 universally unique pieces of decentrailzed artwork available on the Polygon network.\r\n          </Container>\r\n\r\n          <Container text>\r\n            <b>how to mint</b>\r\n            <Divider />\r\n            <List as=\"ol\">\r\n              <List.Item as=\"li\">\r\n                connect your MetaMask wallet to the Polygon network.\r\n                <br />\r\n                <Message size='mini' floating>\r\n                  <Message.Content>\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://docs.polygon.technology/docs/develop/metamask/hello\"> how to download and setup MetaMask </a>\r\n                    <br />\r\n                    <br />\r\n                    <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://docs.polygon.technology/docs/develop/metamask/config-polygon-on-metamask\"> how to add the Polygon main network to your MetaMask wallet </a>\r\n\r\n                  </Message.Content>\r\n                </Message>\r\n              </List.Item>\r\n              <List.Item as=\"li\">\r\n                click mint\r\n                <br />\r\n                <Message size='mini' floating>\r\n                  <Message.Content>\r\n                    each piece costs 3 MATIC. ensure you <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://docs.polygon.technology/docs/develop/fiat-on-ramp\">have enough MATIC</a> in your wallet before clicking mint\r\n                  </Message.Content>\r\n                </Message>\r\n              </List.Item>\r\n            </List>\r\n          </Container>\r\n\r\n          <Container text>\r\n            <b>what are NFTs</b>\r\n            <Divider />\r\n            <div>\r\n              <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/VVDOCCKczCw\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen>\r\n              </iframe>\r\n            </div>\r\n          </Container>\r\n\r\n          <Container text>\r\n            <b>useful links</b>\r\n            <Divider />\r\n            <List as=\"ul\">\r\n              <List.Item as=\"li\">\r\n                <Item.Header href=\"https://polygon.technology/\" target='_blank'>Polygon project\r\n                </Item.Header>\r\n              </List.Item>\r\n            </List>\r\n          </Container>\r\n\r\n\r\n        </Segment>\r\n\r\n      </div>\r\n\r\n    );\r\n\r\n\r\n    return (\r\n      <div>\r\n        {userLayout}\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default withRouter(AboutView);\r\n\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\n\r\nimport HomeView from './containers/HomeView';\r\nimport AboutView from './containers/AboutView';\r\n\r\nconst BaseRouter = () => (\r\n    <div>\r\n        <Route exact path=\"/\" component={HomeView} />\r\n        <Route exact path=\"/about\" component={AboutView} />\r\n    </div>\r\n);\r\n\r\nexport default BaseRouter;","import React, { Component } from 'react';\nimport 'semantic-ui-css/semantic.min.css';\nimport './App.css';\nimport CustomLayout from './containers/Layout';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport BaseRouter from './routes';\n\nclass App extends Component {\n\n  render() {\n\n    return (\n      <div>\n        <Router basename=\"/minanil-app\">\n          <CustomLayout {...this.props}>\n            <BaseRouter />\n          </CustomLayout>\n        </Router>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}